import collections#cadena = "El/DT perro/N come/V carne/N de/P la/DT carnicer√≠a/N y/C de/P la/DT nevera/N y/C canta/V el/DT la/N la/N la/N ./Fp"cadena = "La/DT mam·/N de/P Pedro/N tiene/V tres/DNC tristes/Adj tigres/N que/C comen/V trigo/N en/P un/Pr triste/Adj trigal/N ./Fp ./Fp ./Fp Son/V tres/Pr que/C cantan/V en/P clave/N de/P la/N ./Fp La/DT mam·/N vino/V a/P beber/V vino/N ./Fp"print("Ejercicio 1 \n")listaParesPalCat = [parPalabraCateg.split("/") for parPalabraCateg in cadena.split(" ")]frecuenciaCategorias = {}for palabra,categoria in listaParesPalCat:    if categoria not in frecuenciaCategorias.keys():        frecuenciaCategorias[categoria] = 1    else:        frecuenciaCategorias[categoria] += 1for indice in sorted(frecuenciaCategorias):    print("%s %s \n" % (indice, frecuenciaCategorias[indice]))print("Ejercicio 2 \n")frecuenciaYCategoria = {}for palabra,categoria in listaParesPalCat:    palabraMin = palabra.lower()    if palabraMin not in frecuenciaYCategoria.keys():        frecuenciaYCategoria[palabraMin] = [1, {categoria: 1}]    else:        frecuenciaYCategoria[palabraMin][0] += 1        if categoria not in frecuenciaYCategoria[palabraMin][1].keys():            frecuenciaYCategoria[palabraMin][1][categoria] = 1        else:            frecuenciaYCategoria[palabraMin][1][categoria] += 1               for indice in sorted(frecuenciaYCategoria):    categorias = ""    for categ in frecuenciaYCategoria[indice][1]:        categorias += "%s %s " % (categ, frecuenciaYCategoria[indice][1][categ])    print("%s %s %s \n" % (indice, frecuenciaYCategoria[indice][0], categorias))         print("Ejercicio 3 \n")listaPalIni = []listaPalIni.append("<S>")listaPalFin = []for palabra,categoria in listaParesPalCat:    listaPalIni.append(categoria)    listaPalFin.append(categoria)listaPalFin.append("</S>")listaBigramas = []for i in range(0,len(listaPalFin)):    listaBigramas.append((listaPalIni[i], listaPalFin[i]))cuenta = collections.Counter(listaBigramas)for indice in cuenta:    print(indice, cuenta[indice])print("\nEjercicio 4 \nLlamar a la funci√≥n probLexEmi(palabra)")def probLexEmi(palabra):    if palabra not in frecuenciaYCategoria:        print("Palabra desconocida")    else:        totalFrec = frecuenciaYCategoria[palabra][0]        frecCateg = frecuenciaYCategoria[palabra][1]        totalPalabras = len(listaParesPalCat)        probabilidadPal = totalFrec/totalPalabras        for categoria in frecCateg.keys():            probabilidadLex = frecCateg[categoria]/totalFrec            print("P( %s | %s ) = %.6f \n" % (categoria,palabra, probabilidadLex))            probabilidadCateg = frecuenciaCategorias[categoria]/totalPalabras            probabilidadEmi = probabilidadPal * (probabilidadLex/probabilidadCateg)            print("P( %s | %s ) = %.6f \n" % (palabra,categoria, probabilidadEmi))             